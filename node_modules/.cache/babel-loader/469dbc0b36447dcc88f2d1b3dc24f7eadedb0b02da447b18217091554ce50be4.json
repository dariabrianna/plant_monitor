{"ast":null,"code":"var _jsxFileName = \"/Users/daria-briannareabciuc/Desktop/plant-monitor/plant-monitor/src/components/MetricTile.jsx\";\nimport React from 'react';\nimport './MetricTile.css';\nimport { Thermometer, Droplet, Sun, Wind, CloudSnow, Gauge } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  temperature: /*#__PURE__*/_jsxDEV(Thermometer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 16\n  }, this),\n  moisture: /*#__PURE__*/_jsxDEV(Droplet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 16\n  }, this),\n  light: /*#__PURE__*/_jsxDEV(Sun, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 16\n  }, this),\n  humidity: /*#__PURE__*/_jsxDEV(Wind, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 16\n  }, this),\n  airQuality: /*#__PURE__*/_jsxDEV(CloudSnow, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 16\n  }, this),\n  waterLevel: /*#__PURE__*/_jsxDEV(Gauge, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 16\n  }, this)\n};\nexport default function MetricTile({\n  type,\n  label,\n  value\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-tile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon\",\n      children: iconMap[type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"value\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = MetricTile;\nvar _c;\n$RefreshReg$(_c, \"MetricTile\");","map":{"version":3,"names":["React","Thermometer","Droplet","Sun","Wind","CloudSnow","Gauge","jsxDEV","_jsxDEV","iconMap","temperature","fileName","_jsxFileName","lineNumber","columnNumber","moisture","light","humidity","airQuality","waterLevel","MetricTile","type","label","value","className","children","_c","$RefreshReg$"],"sources":["/Users/daria-briannareabciuc/Desktop/plant-monitor/plant-monitor/src/components/MetricTile.jsx"],"sourcesContent":["import React from 'react';\nimport './MetricTile.css';\nimport { Thermometer, Droplet, Sun, Wind, CloudSnow, Gauge } from 'lucide-react';\n\nconst iconMap = {\n  temperature: <Thermometer />,\n  moisture:    <Droplet />,\n  light:       <Sun />,\n  humidity:    <Wind />,\n  airQuality:  <CloudSnow />,\n  waterLevel:  <Gauge />,\n};\n\nexport default function MetricTile({ type, label, value }) {\n  return (\n    <div className=\"metric-tile\">\n      <div className=\"icon\">{iconMap[type]}</div>\n      <div className=\"info\">\n        <span className=\"label\">{label}</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,SAASC,WAAW,EAAEC,OAAO,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,EAAEC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,OAAO,GAAG;EACdC,WAAW,eAAEF,OAAA,CAACP,WAAW;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC5BC,QAAQ,eAAKP,OAAA,CAACN,OAAO;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACxBE,KAAK,eAAQR,OAAA,CAACL,GAAG;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACpBG,QAAQ,eAAKT,OAAA,CAACJ,IAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACrBI,UAAU,eAAGV,OAAA,CAACH,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC1BK,UAAU,eAAGX,OAAA,CAACF,KAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACvB,CAAC;AAED,eAAe,SAASM,UAAUA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EACzD,oBACEf,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BjB,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEhB,OAAO,CAACY,IAAI;IAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3CN,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBjB,OAAA;QAAMgB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEH;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCN,OAAA;QAAMgB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEF;MAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACY,EAAA,GAVuBN,UAAU;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}