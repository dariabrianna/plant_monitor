{"ast":null,"code":"var _jsxFileName = \"/Users/daria-briannareabciuc/Desktop/plant-monitor/plant-monitor/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Dashboard.css';\nimport MetricTile from '../components/MetricTile';\nimport HistoryTable from '../components/HistoryTable';\nimport StatusCard from '../components/StatusCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const metrics = [{\n    type: 'temperature',\n    label: 'Temperature',\n    value: '30°C'\n  }, {\n    type: 'waterLevel',\n    label: 'Water Tank',\n    value: '99%'\n  }, {\n    type: 'airQuality',\n    label: 'Air Quality',\n    value: '20 ppm'\n  }, {\n    type: 'light',\n    label: 'Light Intensity',\n    value: '6962 lx'\n  }, {\n    type: 'humidity',\n    label: 'Humidity',\n    value: '50%'\n  }, {\n    type: 'moisture',\n    label: 'Soil Moisture',\n    value: '67%'\n  }];\n\n  // date de istoric de test\n  const historyData = {\n    temperature: [{\n      time: '08:00',\n      value: '28°C'\n    }, {\n      time: '10:00',\n      value: '29°C'\n    }, {\n      time: '12:00',\n      value: '30°C'\n    }],\n    waterLevel: [{\n      time: '08:00',\n      value: '100%'\n    }, {\n      time: '10:00',\n      value: '99%'\n    }, {\n      time: '12:00',\n      value: '98%'\n    }],\n    airQuality: [{\n      time: '08:00',\n      value: '18 ppm'\n    }, {\n      time: '10:00',\n      value: '19 ppm'\n    }, {\n      time: '12:00',\n      value: '20 ppm'\n    }],\n    light: [{\n      time: '08:00',\n      value: '5000 lx'\n    }, {\n      time: '10:00',\n      value: '6000 lx'\n    }, {\n      time: '12:00',\n      value: '6962 lx'\n    }],\n    humidity: [{\n      time: '08:00',\n      value: '45%'\n    }, {\n      time: '10:00',\n      value: '48%'\n    }, {\n      time: '12:00',\n      value: '50%'\n    }],\n    moisture: [{\n      time: '08:00',\n      value: '60%'\n    }, {\n      time: '10:00',\n      value: '65%'\n    }, {\n      time: '12:00',\n      value: '67%'\n    }]\n  };\n  const [openHistory, setOpenHistory] = useState({});\n  const toggleHistory = type => {\n    setOpenHistory(prev => ({\n      ...prev,\n      [type]: !prev[type]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plant Health Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-section\",\n      children: [/*#__PURE__*/_jsxDEV(StatusCard, {\n        status: \"Good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-btn\",\n        children: \"Water the plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tiles-grid\",\n      children: metrics.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-container\",\n        children: [/*#__PURE__*/_jsxDEV(MetricTile, {\n          ...m\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"history-toggle-btn\",\n          onClick: () => toggleHistory(m.type),\n          children: openHistory[m.type] ? 'Hide history' : 'Show history'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), openHistory[m.type] && /*#__PURE__*/_jsxDEV(HistoryTable, {\n          title: m.label,\n          data: historyData[m.type] || []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, m.type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"K28QDrcuarBVe914Eqsff1YMCiM=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","MetricTile","HistoryTable","StatusCard","jsxDEV","_jsxDEV","Dashboard","_s","metrics","type","label","value","historyData","temperature","time","waterLevel","airQuality","light","humidity","moisture","openHistory","setOpenHistory","toggleHistory","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","map","m","onClick","title","data","_c","$RefreshReg$"],"sources":["/Users/daria-briannareabciuc/Desktop/plant-monitor/plant-monitor/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Dashboard.css';\n\nimport MetricTile from '../components/MetricTile';\nimport HistoryTable from '../components/HistoryTable';\nimport StatusCard from '../components/StatusCard';\n\nexport default function Dashboard() {\n  const metrics = [\n    { type: 'temperature', label: 'Temperature', value: '30°C' },\n    { type: 'waterLevel',  label: 'Water Tank',  value: '99%'  },\n    { type: 'airQuality',  label: 'Air Quality',  value: '20 ppm' },\n    { type: 'light',       label: 'Light Intensity', value: '6962 lx' },\n    { type: 'humidity',    label: 'Humidity',     value: '50%'  },\n    { type: 'moisture',    label: 'Soil Moisture', value: '67%'  },\n  ];\n\n  // date de istoric de test\n  const historyData = {\n    temperature: [\n      { time: '08:00', value: '28°C' },\n      { time: '10:00', value: '29°C' },\n      { time: '12:00', value: '30°C' },\n    ],\n    waterLevel: [\n      { time: '08:00', value: '100%' },\n      { time: '10:00', value: '99%' },\n      { time: '12:00', value: '98%' },\n    ],\n    airQuality: [\n      { time: '08:00', value: '18 ppm' },\n      { time: '10:00', value: '19 ppm' },\n      { time: '12:00', value: '20 ppm' },\n    ],\n    light: [\n      { time: '08:00', value: '5000 lx' },\n      { time: '10:00', value: '6000 lx' },\n      { time: '12:00', value: '6962 lx' },\n    ],\n    humidity: [\n      { time: '08:00', value: '45%' },\n      { time: '10:00', value: '48%' },\n      { time: '12:00', value: '50%' },\n    ],\n    moisture: [\n      { time: '08:00', value: '60%' },\n      { time: '10:00', value: '65%' },\n      { time: '12:00', value: '67%' },\n    ],\n  };\n\n  const [openHistory, setOpenHistory] = useState({});\n\n  const toggleHistory = (type) => {\n    setOpenHistory(prev => ({\n      ...prev,\n      [type]: !prev[type]\n    }));\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Plant Health Monitoring</h1>\n\n      {/* ─── Zona de status + buton ─── */}\n      <div className=\"action-section\">\n        <StatusCard status=\"Good\" />\n        <button className=\"action-btn\">Water the plant</button>\n      </div>\n\n      {/* ─── Aici vine grid-ul de metrici ─── */}\n      <div className=\"tiles-grid\">\n        {metrics.map(m => (\n          <div key={m.type} className=\"metric-container\">\n            <MetricTile {...m} />\n            <button\n              className=\"history-toggle-btn\"\n              onClick={() => toggleHistory(m.type)}\n            >\n              {openHistory[m.type] ? 'Hide history' : 'Show history'}\n            </button>\n            {openHistory[m.type] && (\n              <HistoryTable\n                title={m.label}\n                data={historyData[m.type] || []}\n              />\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}